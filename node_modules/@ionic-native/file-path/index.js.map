{"version":3,"sources":["../../../src/@ionic-native/plugins/file-path/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAIxE;;;;;;;;;;;;;;;;;;;GAmBG;AASH;IAA8B,4BAAiB;IAA/C;;IAgBA,CAAC;IAdC;;;;OAIG;IAEH,oCAAiB,GAAjB,UAAkB,IAAY,IAAqB,MAAM,CAAC,CAAC,CAAC;IAEvD,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,uBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAPA;QADC,OAAO,EAAE;;;;qDACkD;IARjD,QAAQ;QARpB,MAAM,CAAC;YACN,UAAU,EAAE,UAAU;YACtB,MAAM,EAAE,yBAAyB;YACjC,SAAS,EAAE,iBAAiB;YAC5B,IAAI,EAAE,sDAAsD;YAC5D,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,QAAQ,CAgBpB;IAAD,eAAC;CAhBD,AAgBC,CAhB6B,iBAAiB,GAgB9C;SAhBY,QAAQ","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\ndeclare const window: any;\n\n/**\n * @name File Path\n * @description\n *\n * This plugin allows you to resolve the native filesystem path for Android content URIs and is based on code in the aFileChooser library.\n *\n * @usage\n * ```typescript\n * import { FilePath } from '@ionic-native/file-path';\n *\n * constructor(private filePath: FilePath) { }\n *\n * ...\n *\n * this.filePath.resolveNativePath(path)\n *   .then(filePath => console.log(filePath))\n *   .catch(err => console.log(err));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'FilePath',\n  plugin: 'cordova-plugin-filepath',\n  pluginRef: 'window.FilePath',\n  repo: 'https://github.com/hiddentao/cordova-plugin-filepath',\n  platforms: ['Android']\n})\n\nexport class FilePath extends IonicNativePlugin {\n\n  /**\n   * Resolve native path for given content URL/path.\n   * @param {String} path  Content URL/path.\n   * @returns {Promise<string>}\n   */\n  @Cordova()\n  resolveNativePath(path: string): Promise<string> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}