{"version":3,"sources":["../../../src/@ionic-native/plugins/camera/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\nexport interface CameraOptions {\n  /** Picture quality in range 0-100. Default is 50 */\n  quality?: number;\n  /**\n   * Choose the format of the return value.\n   * Defined in Camera.DestinationType. Default is FILE_URI.\n   *      DATA_URL : 0,   Return image as base64-encoded string,\n   *      FILE_URI : 1,   Return image file URI,\n   *      NATIVE_URI : 2  Return image native URI\n   *          (e.g., assets-library:// on iOS or content:// on Android)\n   */\n  destinationType?: number;\n  /**\n   * Set the source of the picture.\n   * Defined in Camera.PictureSourceType. Default is CAMERA.\n   *      PHOTOLIBRARY : 0,\n   *      CAMERA : 1,\n   *      SAVEDPHOTOALBUM : 2\n   */\n  sourceType?: number;\n  /** Allow simple editing of image before selection. */\n  allowEdit?: boolean;\n  /**\n   * Choose the returned image file's encoding.\n   * Defined in Camera.EncodingType. Default is JPEG\n   *      JPEG : 0    Return JPEG encoded image\n   *      PNG : 1     Return PNG encoded image\n   */\n  encodingType?: number;\n  /**\n   * Width in pixels to scale image. Must be used with targetHeight.\n   * Aspect ratio remains constant.\n  */\n  targetWidth?: number;\n  /**\n   * Height in pixels to scale image. Must be used with targetWidth.\n   * Aspect ratio remains constant.\n   */\n  targetHeight?: number;\n  /**\n   * Set the type of media to select from. Only works when PictureSourceType\n   * is PHOTOLIBRARY or SAVEDPHOTOALBUM. Defined in Camera.MediaType\n   *      PICTURE: 0      allow selection of still pictures only. DEFAULT.\n   *          Will return format specified via DestinationType\n   *      VIDEO: 1        allow selection of video only, WILL ALWAYS RETURN FILE_URI\n   *      ALLMEDIA : 2    allow selection from all media types\n   */\n  mediaType?: number;\n  /** Rotate the image to correct for the orientation of the device during capture. */\n  correctOrientation?: boolean;\n  /** Save the image to the photo album on the device after capture. */\n  saveToPhotoAlbum?: boolean;\n  /**\n   * Choose the camera to use (front- or back-facing).\n   * Defined in Camera.Direction. Default is BACK.\n   *      BACK: 0\n   *      FRONT: 1\n   */\n  cameraDirection?: number;\n  /** iOS-only options that specify popover location in iPad. Defined in CameraPopoverOptions. */\n  popoverOptions?: CameraPopoverOptions;\n}\n\n/**\n * iOS-only parameters that specify the anchor element location and arrow direction\n * of the popover when selecting images from an iPad's library or album.\n */\nexport interface CameraPopoverOptions {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  /**\n   * Direction the arrow on the popover should point. Defined in Camera.PopoverArrowDirection\n   * Matches iOS UIPopoverArrowDirection constants.\n   *      ARROW_UP : 1,\n   *      ARROW_DOWN : 2,\n   *      ARROW_LEFT : 4,\n   *      ARROW_RIGHT : 8,\n   *      ARROW_ANY : 15\n   */\n  arrowDir: number;\n}\n\nexport enum DestinationType {\n  DATA_URL = 0,\n  FILE_URL,\n  NATIVE_URI\n}\n\nexport enum EncodingType {\n  JPEG = 0,\n  PNG\n}\n\nexport enum MediaType {\n  PICTURE = 0,\n  VIDEO,\n  ALLMEDIA\n}\n\nexport enum PictureSourceType {\n  PHOTOLIBRARY = 0,\n  CAMERA,\n  SAVEDPHOTOALBUM\n}\n\nexport enum PopoverArrowDirection {\n  ARROW_UP = 1,\n  ARROW_DOWN,\n  ARROW_LEFT,\n  ARROW_RIGHT,\n  ARROW_ANY\n}\n\nexport enum Direction {\n  BACK = 0,\n  FRONT\n}\n\n/**\n * @name Camera\n * @description\n * Take a photo or capture video.\n *\n * Requires and the Cordova plugin: `cordova-plugin-camera`. For more info, please see the [Cordova Camera Plugin Docs](https://github.com/apache/cordova-plugin-camera).\n *\n * @usage\n * ```typescript\n * import { Camera, CameraOptions } from '@ionic-native/camera';\n *\n * constructor(private camera: Camera) { }\n *\n * ...\n *\n *\n * const options: CameraOptions = {\n *   quality: 100,\n *   destinationType: this.camera.DestinationType.DATA_URL,\n *   encodingType: this.camera.EncodingType.JPEG,\n *   mediaType: this.camera.MediaType.PICTURE\n * }\n *\n * this.camera.getPicture(options).then((imageData) => {\n *  // imageData is either a base64 encoded string or a file URI\n *  // If it's base64:\n *  let base64Image = 'data:image/jpeg;base64,' + imageData;\n * }, (err) => {\n *  // Handle error\n * });\n * ```\n * @interfaces\n * CameraOptions\n * CameraPopoverOptions\n */\n@Plugin({\n  pluginName: 'Camera',\n  plugin: 'cordova-plugin-camera',\n  pluginRef: 'navigator.camera',\n  repo: 'https://github.com/apache/cordova-plugin-camera',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows']\n})\n\nexport class Camera extends IonicNativePlugin {\n\n  /**\n   * Constant for possible destination types\n   */\n  DestinationType = {\n    /** Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible */\n    DATA_URL: 0,\n    /** Return file uri (content://media/external/images/media/2 for Android) */\n    FILE_URI: 1,\n    /** Return native uri (eg. asset-library://... for iOS) */\n    NATIVE_URI: 2\n  };\n\n  /**\n   * Convenience constant\n   */\n  EncodingType = {\n    /** Return JPEG encoded image */\n    JPEG: 0,\n    /** Return PNG encoded image */\n    PNG: 1\n  };\n\n  /**\n   * Convenience constant\n   */\n  MediaType = {\n    /** Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType */\n    PICTURE: 0,\n    /** Allow selection of video only, ONLY RETURNS URL */\n    VIDEO: 1,\n    /** Allow selection from all media types */\n    ALLMEDIA: 2\n  };\n\n\n  /**\n   * Convenience constant\n   */\n  PictureSourceType = {\n    /** Choose image from picture library (same as SAVEDPHOTOALBUM for Android) */\n    PHOTOLIBRARY: 0,\n    /** Take picture from camera */\n    CAMERA: 1,\n    /** Choose image from picture library (same as PHOTOLIBRARY for Android) */\n    SAVEDPHOTOALBUM: 2\n  };\n\n\n  /**\n   * Convenience constant\n   */\n  PopoverArrowDirection = {\n    ARROW_UP: 1,\n    ARROW_DOWN: 2,\n    ARROW_LEFT: 4,\n    ARROW_RIGHT: 8,\n    ARROW_ANY: 15\n  };\n\n  /**\n   * Convenience constant\n   */\n  Direction = {\n    /** Use the back-facing camera */\n    BACK: 0,\n    /** Use the front-facing camera */\n    FRONT: 1\n  };\n\n  /**\n   * Take a picture or video, or load one from the library.\n   * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\n   * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\n   */\n  @Cordova({\n    callbackOrder: 'reverse'\n  })\n  getPicture(options?: CameraOptions): Promise<any> { return; }\n\n  /**\n   * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n   * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS']\n  })\n  cleanup(): Promise<any> { return; };\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}